(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))t(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const c of s.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&t(c)}).observe(document,{childList:!0,subtree:!0});function a(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function t(n){if(n.ep)return;n.ep=!0;const s=a(n);fetch(n.href,s)}})();const d="ghs_XL7s9BuLEFqfwgWzKwnxbqIE03whaw3SzG1n";let p=0,u=[];function g(e){switch(e){case"RidersHub":return"RidersHub";case"FreeFallSimulations":return"FreeFallSimulations";case"OnlyJobsWeb":return"OnlyJobsWeb";default:return e}}const x={RidersHub:[{title:"1. Geospatial & Mapping",details:["Haversine + PostGIS: Calculated straight‑line distances point A to point B"]},{title:"2. Security",details:["JWT (JSON Web Tokens): Issued and validated tokens for token‑based user sessions."]},{title:"3. Backend Architecture & API Design",details:["Spring Boot (MVC): Structured your code into Controllers, Services, Repositories.","DTOs (Data Transfer Objects): Created lightweight objects to pass only the needed data between client and server with validation.","RESTful Endpoints: Designed and exposed resource‑oriented HTTP APIs with spring security for authorization and authentication.","Postman Testing: sent requests, inspected responses, and debugged API flows."]},{title:"4. Data Persistence",details:["JPA/Hibernate + PostgreSQL: Modeled entities, wrote queries, and let Hibernate manage the SQL under the hood."]},{title:"5. Third‑Party Integrations",details:["Nominatim Geocoding API: Converted user‑entered addresses into latitude/longitude coordinates and convert it to barangay name using psgc datasets.","Bucket4j Rate‑Limiting: Throttled API calls to Nominatim so you stay within Nominatim usage policy policy.","Cloudinary: Uploaded, stored, and served rider map snapshots.","Mapbox Static Images API: Generated and captured map snapshots of rider locations for quick visual previews."]}],OnlyJobsWeb:[{title:"Online Job-Matching Platform for Agency Company",details:["<b>Full-Stack Web Application:</b> Streamlined candidate screening and automated job application processes.","<b>End-to-End Routing & Integration:</b> Defined Laravel routes and connected React frontend components with backend API endpoints for seamless client-server interaction.","<b>Admin Dashboard & CRUD:</b> Built 10+ CRUD endpoints for job posts and admin features, including form validations, document uploads via Cloudinary API, and PDF export."]}],FreeFallSimulations:[{title:"<b>1. Physics Simulation</b>",details:["Created a tool to visualize and analyze <b>free fall motion</b> scenarios.","Simulates free fall on different planets with varying <b>gravitational acceleration</b>.","Uses <b>kinematic equations</b> to calculate fall time and final velocity."]},{title:"<b>2. Data Visualization & UI</b>",details:["Visualizes real-time motion, velocity, and comparative data with <b>dynamic charts</b>.","Interactive UI built with <b>Pygame</b> for smooth animations and user input."]}]},E=document.getElementById("project-main-image");E.src="src/freefall/freefall.gif";E.style.display="block";const I={RidersHub:["src/assets/rider/rideui1.png","src/assets/rider/rideui2.png","src/assets/rider/rideui3.png","src/assets/rider/rideui4.png","src/assets/rider/rideui5.png","src/assets/rider/rideui6.png","src/assets/rider/rideui7.png","src/assets/rider/rideui8.png"],FreeFallSimulations:["src/assets/freefall/freefall.gif"],OnlyJobsWeb:["src/assets/onlyjobs/2nd.png","src/assets/onlyjobs/55.png","src/assets/onlyjobs/4.png","src/assets/onlyjobs/5s.png"]};document.addEventListener("DOMContentLoaded",function(){const e="Leyaaaan1";H(e),B(),P(e),C();const o=document.getElementById("prev-image-btn"),a=document.getElementById("next-image-btn");o&&o.addEventListener("click",D),a&&a.addEventListener("click",F)});async function B(){const e=document.querySelector(".github-repos");if(!e)return;e.innerHTML='<div class="loading">Loading repositories...</div>';const o=["https://github.com/Leyaaaan1/RidersHub","https://github.com/Leyaaaan1/FreeFallSimulations","https://github.com/bakaraw/OnlyJobsWeb","https://github.com/bakaraw/QuizWebsite","https://github.com/bakaraw/OnlyJobs","https://github.com/Leyaaaan1/busnavs"];try{const t=(await Promise.all(o.map(async(n,s)=>{const c=n.match(/github\.com\/([^\/]+)\/([^\/]+)/);if(!c)return null;const i=c[1],r=c[2],l=await fetch(`https://api.github.com/repos/${i}/${r}`,{headers:d?{Authorization:`token ${d}`}:{}});if(!l.ok)return null;const m=await l.json(),y=await fetch(`https://api.github.com/repos/${i}/${r}/languages`,{headers:d?{Authorization:`token ${d}`}:{}});let w=[];if(y.ok){const k=await y.json();w=Object.entries(k).sort((h,$)=>$[1]-h[1]).slice(0,2).map(([h])=>h)}return m.topLanguages=w,r==="RidersHub"&&S(m),m}))).filter(Boolean);t.length>0?A(t,e):e.innerHTML=`
        <div class="github-repo-error">
          <h4>Unable to load repositories</h4>
          <p>Check the repository links or try again later.</p>
        </div>
      `}catch(a){console.error("Error fetching GitHub repositories:",a),e.innerHTML=`
      <div class="github-repo-error">
        <h4>Error loading repositories</h4>
        <p>Please try again later.</p>
      </div>
    `}}async function S(e){document.getElementById("project-title").textContent=e.name||"Unknown Project",document.getElementById("project-description").textContent=e.description||"No description available",document.getElementById("project-stars").textContent=`⭐ ${e.stargazers_count||0}`;const a=new Date(e.updated_at).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"});document.getElementById("project-updated").textContent=`Updated: ${a}`;const t=document.getElementById("project-tech");t&&e.topLanguages&&(t.innerHTML=e.topLanguages.map(n=>`<span class="tech-tag">${n}</span>`).join("")),L(g(e.name)),b(g(e.name));try{const n=await fetch(`https://api.github.com/repos/${e.owner.login}/${e.name}/readme`,{headers:d?{Authorization:`token ${d}`}:{}});if(n.ok){const s=await n.json(),c=atob(s.content),i=await fetch("https://api.github.com/markdown",{method:"POST",headers:{"Content-Type":"application/json",...d?{Authorization:`token ${d}`}:{}},body:JSON.stringify({text:c,mode:"gfm",context:`${e.owner.login}/${e.name}`})});if(i.ok){const r=await i.text();if(!document.getElementById("github-markdown-css")){const l=document.createElement("link");l.id="github-markdown-css",l.rel="stylesheet",l.href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.1.0/github-markdown.min.css",document.head.appendChild(l)}document.getElementById("project-readme").innerHTML=`
                    <div class="readme-content markdown-body">
                        ${r}
                    </div>
                `,j(document.getElementById("project-readme"),e.owner.login,e.name)}else throw new Error("Failed to render markdown")}}catch(n){console.error("Error fetching README:",n);const s=document.getElementById("project-readme");s&&(s.innerHTML='<p class="readme-content">Unable to load README content.</p>')}}async function H(e){if(document.querySelector(".github-contributions"))try{const a=await fetch(`https://api.github.com/users/${e}`,{headers:d?{Authorization:`token ${d}`}:{}});if(a.ok){const t=await a.json(),n=document.getElementById("github-profile-info");n&&(n.innerHTML=`
      <div class="github-profile-header fade-in" style="display: flex; gap: 24px; align-items: flex-start;">
        <img src="${t.avatar_url}" alt="${t.name||t.login}" class="github-avatar" style="width: 96px;  color: #fff; height: 96px; border-radius: 50%; object-fit: cover;">
        <div style="flex: 1;">
          <h4 style="margin: 0 0 4px 0;  color: #fff;">${t.name||t.login}</h4>
          <p class="github-username" style="margin: 0 0 8px 0;  color: #fff;">@${t.login}</p>
          <div class="github-stats" style="display: flex; flex-direction: column; gap: 8px;">
          <div class="github-stat">
            <span class="stat-number">${t.public_repos}</span>
            <span class="stat-label">Repositories</span>
          </div>
          <div class="github-stat">
            <span class="stat-number">${t.followers}</span>
            <span class="stat-label">Followers</span>
          </div>
          <div class="github-stat">
            <span class="stat-number">${t.following}</span>
            <span class="stat-label">Following</span>
          </div>
        </div>
        </div>
            <div class="github-stats-container" style="display: flex; flex-direction: column; gap: 4px; min-width: 500px;">
              <img src="https://github-readme-stats.vercel.app/api?username=Leyaaaan1&show_icons=true&theme=radical&locale=en"
                   alt="Leyaaaan1 GitHub stats" class="stats-image"
                   style="width: 100%; min-width: 280px; max-width: 500px; border-radius: 16px; box-shadow: 0 2px 16px rgba(0,0,0,0.12);" />
              <img src="https://github-readme-streak-stats.herokuapp.com/?user=Leyaaaan1&theme=radical"
                   alt="Leyaaaan1 streak stats" class="stats-image"
                   style="width: 100%; min-width: 280px; max-width: 500px; border-radius: 16px; box-shadow: 0 2px 16px rgba(0,0,0,0.12);" />
            </div>
          </div>
        `)}else console.error("Failed to fetch GitHub profile data")}catch(a){console.error("Error updating GitHub profile section:",a)}}function A(e,o){if(e.length===0){o.innerHTML="<p>No repositories found.</p>";return}const a=e.map(t=>{const s=new Date(t.updated_at).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"}),c=t.topLanguages&&t.topLanguages.length?t.topLanguages.map(i=>`<span class="repo-language">${i}</span>`).join(" "):t.language?`<span class="repo-language">${t.language}</span>`:"";return`
      <div class="github-repo fade-in">
        <h4><a href="${t.html_url}" target="_blank">${t.name}</a></h4>
        <p>${t.description||"No description available."}</p>
        <div class="repo-details">
          ${c}
          <span>Updated: ${s}</span>
          <span>⭐ ${t.stargazers_count}</span>
        </div>
      </div>
    `}).join("");o.innerHTML=a}async function P(e){if(document.querySelector(".github-contributions"))try{const a=document.querySelector(".profile-views");a&&(a.innerHTML=`<img src="https://komarev.com/ghpvc/?username=${e}&label=Profile%20views&color=0e75b6&style=flat" alt="${e}" />`);const t=document.getElementById("total-contributions"),n=document.getElementById("current-streak"),s=document.getElementById("longest-streak");t&&(t.textContent="See stats below"),n&&(n.textContent="See stats below"),s&&(s.textContent="See stats below")}catch(a){console.error("Error fetching GitHub contributions:",a)}}const T=[{id:0,name:"RidersHub",repoPath:"Leyaaaan1/RidersHub"},{id:1,name:"OnlyJobs Web",repoPath:"bakaraw/OnlyJobsWeb"},{id:2,name:"FreeFall Simulations",repoPath:"Leyaaaan1/FreeFallSimulations"}];function C(){const e=document.querySelectorAll(".repo-tab");e.forEach(o=>{o.addEventListener("click",function(){const a=parseInt(this.getAttribute("data-repo"));e.forEach(t=>t.classList.remove("active")),this.classList.add("active"),v(a)})}),v(0)}async function v(e){const o=T[e];if(!o)return;const[a,t]=o.repoPath.split("/");try{const n=await fetch(`https://api.github.com/repos/${a}/${t}`,{headers:d?{Authorization:`token ${d}`}:{}});if(n.ok){const s=await n.json(),c=await fetch(`https://api.github.com/repos/${a}/${t}/languages`,{headers:d?{Authorization:`token ${d}`}:{}});let i=[];if(c.ok){const r=await c.json();i=Object.entries(r).sort((l,m)=>m[1]-l[1]).map(([l])=>l)}s.topLanguages=i,R(s),M(a,t)}}catch(n){console.error("Error loading repository data:",n)}}function R(e){document.getElementById("project-title").textContent=e.name||"Unknown Project",document.getElementById("project-description").textContent=e.description||"No description available",document.getElementById("project-stars").textContent=`⭐ ${e.stargazers_count||0}`;const o=document.getElementById("project-link");o&&e.html_url&&(o.href=e.html_url),b(e.name);const t=new Date(e.updated_at).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"});document.getElementById("project-updated").textContent=`Updated: ${t}`;const n=document.getElementById("project-tech");n&&e.topLanguages&&(n.innerHTML=e.topLanguages.map(s=>`<span class="tech-tag">${s}</span>`).join("")),L(g(e.name)),b(g(e.name))}async function M(e,o){try{const a=await fetch(`https://api.github.com/repos/${e}/${o}/readme`,{headers:d?{Authorization:`token ${d}`}:{}});if(a.ok){const t=await a.json(),n=atob(t.content),s=await fetch("https://api.github.com/markdown",{method:"POST",headers:{"Content-Type":"application/json",...d?{Authorization:`token ${d}`}:{}},body:JSON.stringify({text:n,mode:"gfm",context:`${e}/${o}`})});if(s.ok){const c=await s.text();if(!document.getElementById("github-markdown-css")){const i=document.createElement("link");i.id="github-markdown-css",i.rel="stylesheet",i.href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.1.0/github-markdown.min.css",document.head.appendChild(i)}document.getElementById("project-readme").innerHTML=`
                    <div class="readme-content markdown-body">
                        ${c}
                    </div>
                `,j(document.getElementById("project-readme"),e,o)}else throw new Error("Failed to render markdown")}}catch(a){console.error("Error fetching or rendering README:",a),document.getElementById("project-readme").innerHTML='<p class="readme-content">Unable to load README content.</p>'}}function j(e,o,a){const t=e.querySelectorAll("a"),n=e.querySelectorAll("img"),s=`https://github.com/${o}/${a}/blob/main/`,c=`https://raw.githubusercontent.com/${o}/${a}/main/`;t.forEach(i=>{const r=i.getAttribute("href");r&&!r.startsWith("http")&&!r.startsWith("#")&&(i.href=s+r)}),n.forEach(i=>{const r=i.getAttribute("src");r&&!r.startsWith("http")&&(i.src=c+r)})}function f(e){if(!u||u.length===0)return;e<0&&(e=u.length-1),e>=u.length&&(e=0),p=e;const o=document.getElementById("project-main-image"),a=document.getElementById("project-image-placeholder");o.src=u[e],o.onload=function(){o.style.display="block",a.style.display="none"},o.onerror=function(){console.error(`Failed to load image: ${u[e]}`),o.style.display="none",a.style.display="flex",a.innerHTML=`
            <h3>Image Not Found</h3>
            <p>Could not load image ${e+1}</p>
        `},document.querySelectorAll(".thumbnail-placeholder").forEach((n,s)=>{s===e?n.classList.add("active"):n.classList.remove("active")})}function D(){f(p-1)}function F(){f(p+1)}function L(e){const o=I[e];if(!o||o.length===0){const i=document.getElementById("project-main-image"),r=document.getElementById("project-image-placeholder"),l=document.getElementById("project-thumbnails");i.style.display="none",r.style.display="flex",l.innerHTML="",u=[],p=0;return}u=o,p=0;const a=document.getElementById("project-main-image"),t=document.getElementById("project-image-placeholder");a.src=o[0],a.alt=`${e} screenshot`,a.onload=function(){a.style.display="block",t.style.display="none"},a.onerror=function(){console.error(`Failed to load image: ${o[0]}`),a.style.display="none",t.style.display="flex",t.innerHTML=`
            <h3>Image Not Found</h3>
            <p>Could not load project images for ${e}</p>
        `};const n=document.getElementById("project-thumbnails");if(!n)return;n.innerHTML="",o.forEach((i,r)=>{const l=document.createElement("div");l.className=r===0?"thumbnail-placeholder active":"thumbnail-placeholder",l.textContent=`Image ${r+1}`,l.addEventListener("click",()=>f(r)),n.appendChild(l)});const s=document.getElementById("prev-image-btn"),c=document.getElementById("next-image-btn");o.length>1?(s.style.display="flex",c.style.display="flex"):(s.style.display="none",c.style.display="none")}function b(e){const o=x[e]||[],a=document.getElementById("project-details-container");if(a){if(o.length===0){a.innerHTML="<p>No details available for this project.</p>";return}a.innerHTML=o.map(t=>`<div class="project-feature">
            <h5>${t.title}</h5>
            ${t.details.map(n=>`<p>${n}</p>`).join("")}
        </div>`).join("")}}
